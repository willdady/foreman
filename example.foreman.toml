# This is an example foreman config file.
# All fields are optional unless marked REQUIRED.
# Copy this file before making changes `cp example.foreman.toml foreman.toml`.
# Values denoting a duration are always in milliseconds.

[core]
# URL of the control server - REQUIRED
url = "http://localhost:8888/job"

# Bearer token foreman will send in requests to the the control server.
# This is set as HTTP header `Authorization: Bearer YOUR_TOKEN_HERE` in GET requests sent to the above `url`.
# - REQUIRED
token = "YOUR_TOKEN_HERE"

# Hostname containers will use to access the foreman agent's REST API - REQUIRED
hostname = "YOUR_HOSTNAME_HERE"

# Port on which to expose foreman
# port = 3000

# Network name to use for containers created by foreman
# network_name = "foreman"

# How long to wait for a job to report a 'completed' status before stopping the job
# job_completion_timeout = 10000

# How long to wait before deleting a stopped job container
# job_removal_timeout = 5000

# Whether to remove stopped containers on termination of foreman
# remove_stopped_containers_on_terminate = true

# Additional hosts to add to containers e.g. `extra_hosts = ["host.docker.internal:host-gateway"]`
# extra_hosts = []

# How frequently to poll the control server for jobs
# poll_frequency = 5000

# How long to wait for a response from the control server
# poll_timeout = 30000

# The maximum number of concurrent jobs to run
# max_concurrent_jobs = 12

# Default environment variables to set in every container created by foreman.
# These will override matching variables set in a job definition.
[core.env]

# Labels to send in the `x-foreman-labels` HTTP header in requests sent to the control server (`core.url` above).
# These key/value pairs will be formatted `key1=value,key2=value`.
# The order of the resulting header value is NOT guaranteed.
[core.labels]

[docker]
# Docker deamon endpoint
# url = 'unix:///var/run/docker.sock'

# Start port for container mapping
# start_port = 49152

# End port for container mapping
# end_port = 65535
